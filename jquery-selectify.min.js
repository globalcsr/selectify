/*
 * File:        jquery-selectify.min.js
 * Version:     0.1
 * Author:      Vincent Keizer (www.vicreative.nl)
 * Info:        www.vicreative.nl/projects/selectify
 * 
 * Copyright 2012-2013 Vincent Keizer, all rights reserved.
 *
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * 
 */
(function (e) { var t = { init: function (t) { var n = e.extend({ maxItems: 10 }, t); return e(this).each(function () { var t = e(this); var r = t.data("selectify"); if (!r) { var i = function (e) { if (t.data("selectify").text == e) { t.data("selectify").text = "" } }; var s = e("<div />", { "class": "selectify", tabindex: "0", focus: function (n) { target = n.originalEvent ? n.originalEvent.explicitOriginalTarget || n.originalEvent.srcElement : null; if (e(this).hasClass("focus") && e(this).hasClass("open")) { return } else if (!e(this).hasClass("open") && (target == null || !t.has(e(target)))) { e(this).trigger("open") } e(this).trigger("activate") }, focusout: function () { e(this).removeClass("focus").trigger("close").unbind("keydown") } }); s.bind("close", function () { if (e(this).hasClass("open")); { e(this).removeClass("open").find(".options").slideUp() } }); s.bind("open", function () { if (!e(this).hasClass("open")); { e(this).addClass("open").find(".options").slideDown("fast", function () { e(this).trigger("scrollTo", e(this).children(".option.active")) }) } }); s.bind("scrollTo", function (t, n) { if (!n || typeof n != "object" || !e(n).length) { return } var r = e(n); var i = e(this).find(".options").scrollTop(); var s = r.position().top + i; var o = e(this).find(".options").height(); if (s < i) { e(this).find(".options").scrollTop(s) } else if (s + r.outerHeight() >= i + o) { e(this).find(".options").scrollTop(s - (o - r.outerHeight())) } }); s.bind("activate", function () { e(this).addClass("focus").unbind("keydown").keydown(function (n) { switch (n.which) { case 40: var r = e(this).find(".option.hover"); if (!r.length) { r = e(this).find(".option.active") } var s = r.next(); if (!s.length) { s = e(this).find(".option:first") } e(this).trigger("select", s); n.preventDefault(); return false; break; case 38: var r = e(this).find(".option.hover"); if (!r.length) { r = e(this).find(".option.active") } var o = r.prev(); if (!o.length) { o = e(this).find(".option:last") } e(this).trigger("select", o); n.preventDefault(); return false; break; case 13: e(this).trigger("close"); break; default: var u = String.fromCharCode(n.which); if (!u) { t.data("selectify").text = ""; break } var a = t.data("selectify").text || ""; a = a + u.toLowerCase(); t.data("selectify").text = a; setTimeout(function () { i(a) }, 1e3); var f = e(this).find(".option[data-text^='" + a + "']:first"); if (f.length) { e(this).trigger("select", f) } break } }) }); s.bind("select", function (n, r) { if (!r) { return } if (typeof r == "string") { e(this).find(".option[data-id='" + r + "']:not(.active)").click(); return } if (typeof r == "object") { var i = e(r); var s = i.attr("data-id"); t.val(s); e(this).find(".selected").attr("data-id", s).text(i.text()); e(this).find(".option.active").removeClass("active"); i.addClass("active"); e(this).find(".option.hover").removeClass("hover"); e(this).trigger("scrollTo", i) } }); var o = e("<div />", { "class": "options" }); var u = e("<div />", { "class": "selected", "data-id": t.children(":selected").val(), text: t.children(":selected").text() }); var a = e("<div />", { "class": "header", click: function () { if (e(this).parent().hasClass("open") && e(this).parent().hasClass("focus")) { e(this).trigger("close") } else if (!e(this).parent().hasClass("focus")) { e(this).trigger("activate") } else { e(this).trigger("open") } }, mouseover: function () { e(this).addClass("hover") }, mouseout: function () { e(this).removeClass("hover") } }); var f = e("<div />", { "class": "icon" }); t.children().each(function () { var t = e("<div />", { "class": "option", "data-id": e(this).val(), "data-text": e(this).text().toLowerCase(), text: e(this).text(), click: function () { e(this).trigger("select", this).trigger("close") }, mouseover: function () { e(this).siblings().removeClass("hover"); e(this).addClass("hover") }, mouseout: function () { e(this).removeClass("hover") } }); o.append(t) }); s.append(a.append(u).append(f)).append(o); t.before(s); var l = o.outerWidth() + f.outerWidth(); o.width(l); s.width(l); o.css("max-height", n.maxItems * o.children().outerHeight()).hide(); t.data("selectify", { target: t, selectify: s, text: "" }).change(function () { e(this).data("selectify").selectify.trigger("select", e(this).val()) }).hide() } }) }, destroy: function () { return this.each(function () { var t = e(this), n = t.data("selectify"); if (n) { e(window).unbind(".selectify"); n.selectify.remove(); t.removeData("selectify"); t.show() } }) }, open: function () { return this.each(function () { var t = e(this).data("selectify"); if (t) { t.selectify.focus() } }) }, close: function () { return this.each(function () { var t = e(this).data("selectify"); if (t) { t.selectify.blur() } }) }, update: function (t) { return this.each(function () { var n = e(this).data("selectify"); if (n) { n.selectify.trigger("select", t) } }) } }; e.fn.selectify = function (n) { var r = n; if (t[r]) { return t[r].apply(this, Array.prototype.slice.call(arguments, 1)) } else if (typeof r === "object" || !r) { return t.init.apply(this, arguments) } else { e.error("Method " + r + " does not exist on jQuery.selectify") } } })(jQuery)